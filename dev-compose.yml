# docker-compose.yml
version: '3.8'

services:
  postgres:
    container_name: postgres_container
    image: postgres
    hostname: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5432:5432

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    networks:
      - postgres
    restart: unless-stopped

  frontend-dev:
    container_name: frontend-dev
    build:
      context: .
      dockerfile: dev.dockerfile
    restart: unless-stopped
    volumes:
      - .:/app
    ports:
      - 3000:3000

  mongo:
    container_name: mongo
    image: mongo
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.10
    environment:
      - http.host=0.0.0.0
      - ES_JAVA_OPTS='-Xms512m -Xmx512m'

  graylog:
    image: graylog/graylog3.3
    environment:
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
    ports:
      - 9000:9000
      - 12201:12201
      - 1514:1514
    restart: unless-stopped

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin:
